<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://code.alibabatech.com/schema/dubbo 
	http://code.alibabatech.com/schema/dubbo/dubbo.xsd
	">

	<context:property-placeholder
		location="classpath:ip.properties" />

	<!-- 引用dubbo服务 -->
	<dubbo:application name="e3-manager-web" />
	<dubbo:registry protocol="zookeeper"
		address="192.168.1.128:2181" />
	<dubbo:reference
		interface="com.hzm.service.Iteminterface" id="itemimpl" />
	<dubbo:reference
		interface="com.hzm.service.ItemCatInterface" id="itemCatInterFaceImpl" />
	<dubbo:reference
		interface="com.hzm.service.Contentinterface" id="contentServiceImpl" />
	<dubbo:reference
		interface="com.hzm.service.ContentManagementInterface"
		id="contentManagementInterfaceImpl" />
	<dubbo:reference
		interface="e3_solr_interface.SolrInterface" id="solrInterfaceImpl" />




	<context:component-scan
		base-package="com.hzn.web"></context:component-scan>

	<mvc:annotation-driven></mvc:annotation-driven>


	<bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver">
		<property name="maxUploadSize" value="20971520"></property>
		<property name="defaultEncoding" value="utf-8"></property>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">

		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<bean class="com.hzn.exception.GolbException"></bean>

	<mvc:resources location="/css/" mapping="/css/**"></mvc:resources>
	<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>




	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
	<bean id="targetConnectionFactory"
		class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="tcp://192.168.1.128:61616" />
	</bean>
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="connectionFactory"
		class="org.springframework.jms.connection.SingleConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory"
			ref="targetConnectionFactory" />
	</bean>

	<!-- 配置生产者 -->
	<!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
	<bean id="jmsTemplate"
		class="org.springframework.jms.core.JmsTemplate">
		<!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>
	<!--这个是队列目的地，点对点的 -->
	<bean id="queueDestination"
		class="org.apache.activemq.command.ActiveMQQueue">

		<constructor-arg name="name" value="spring-queue"></constructor-arg>
	</bean>
	<!--这个是主题目的地，一对多的 -->
	<bean id="topicDestination"
		class="org.apache.activemq.command.ActiveMQTopic">
		<constructor-arg name="name" value="itemtosql_topic" />
	</bean>



</beans>
